{"version":3,"sources":["components/Search.js","components/Item.js","components/Category.js","components/Favorites.js","App.js","serviceWorker.js","index.js"],"names":["Search","props","react_default","a","createElement","className","onSubmit","e","preventDefault","handleFormSearch","target","value","type","placeholder","Item","_props$itemDetails","itemDetails","art","genre","id","trackName","url","concat","href","rel","src","alt","onClick","event","favorited","removeFromFavorites","addToFavorites","Category","items","categoryList","forEach","item","push","components_Item","key","isFavorited","categoryName","Favorites","favorites","favoritesList","Object","values","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","results","searchTerm","bind","assertThisInitialized","checkFavorites","window","localStorage","setState","JSON","parse","_this2","length","axios","get","params","term","then","response","sortedCategories","entries","data","fetched","setItem","stringify","keys","_this3","category","components_Category","location","reload","components_Search","handleInput","components_Favorites","Component","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2267e62b.chunk.js","sourcesContent":["import React from 'react';\n\nconst Search = (props) => {\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.handleFormSearch(e.target[0].value);\n  }\n\n  return (\n    <div className=\"search\">\n      <form onSubmit={handleSubmit} className=\"searchForm\">\n        <input type=\"text\" placeholder=\"Search...\" className=\"searchTerm\"></input>\n        <button className=\"searchButton\">\n          <i className=\"fa fa-search\"></i>\n        </button>\n      </form>\n    </div>\n  )\n\n}\n\nexport default Search;","import React from 'react';\n\nconst Item = (props) => {\n\n  const {art, genre, id, trackName, url} = props.itemDetails;\n  const runFavoriteFunction = () => {\n    if(props.favorited) {\n      props.removeFromFavorites(props.itemDetails);\n    } else {\n      props.addToFavorites(props.itemDetails)\n    }\n  }\n\n  return (\n    <div className=\"item\" id={`track-name-${id}`}>\n      <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n        <img src={art} alt=\"trackName\"/>\n      </a>\n      <p>{trackName}</p>\n      <p>{id}</p>\n      <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">view on iTunes Store</a>\n      <p>{genre}</p>\n      <button onClick={(event) => runFavoriteFunction()}>{props.favorited ? 'Remove Favorite' : 'Favorite'}</button>\n    </div>\n  )\n\n}\n\nexport default Item;","import React from 'react';\nimport Item from './Item';\n\nconst Category = (props) => {\n\n  const items = [];\n\n  if(props.categoryList) {\n    props.categoryList.forEach((item) => {\n      items.push(<Item key={`item-${item.id}`}itemDetails={item} favorited={props.isFavorited(item.id) ? true: false} \n        removeFromFavorites={props.removeFromFavorites} addToFavorites={props.addToFavorites}></Item>)\n    })\n  }\n\n  return (\n    <div>\n      <div className=\"categoryTitle\">\n        <h2>Category: {props.categoryName}</h2>\n      </div>\n      <div className=\"categoryContainer\">\n       {items}\n      </div>\n    </div>\n \n  )\n\n}\n\nexport default Category;","import React from 'react';\nimport Item from './Item';\n\nconst Favorites = (props) => {\n\n  let favorites;\n\n  if(!props.favoritesList) {\n    favorites = <p>Favorites Empty</p>\n  } else {\n    favorites = [];\n    Object.values(props.favoritesList).forEach((item) => {\n      favorites.push(<Item key={`item-${item.id}`}itemDetails={item} favorited={true} removeFromFavorites={props.removeFromFavorites}></Item>)\n    })\n  }\n \n\n  return(\n    <div>\n      <h2>Favorites</h2>\n      <div className=\"categoryContainer\">\n        {favorites}\n      </div>\n    </div>\n\n  )\n}\n\nexport default Favorites;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Search from './components/Search';\nimport Category from './components/Category';\nimport Favorites from './components/Favorites';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      results : null,\n      searchTerm : '',\n      favorites : null,\n    }\n    this.handleFormSearch = this.handleFormSearch.bind(this);\n    this.addToFavorites = this.addToFavorites.bind(this);\n    this.removeFromFavorites = this.removeFromFavorites.bind(this);\n    this.isFavorited = this.isFavorited.bind(this);\n    this.checkFavorites = this.checkFavorites.bind(this);\n  }\n\n  componentDidMount() {\n    if(window.localStorage.favorites) {\n      this.setState({favorites : JSON.parse(window.localStorage.favorites)})\n    }\n  }\n\n  handleFormSearch(searchTerm) {\n    if(searchTerm.length > 0) {\n      axios.get('http://localhost:8080/search?', {\n        params: {\n          term: searchTerm\n        }\n      }).then((response) => {\n        const sortedCategories = Object.entries(response.data);\n        this.setState({results: sortedCategories, fetched: true});\n      })\n    }\n  }\n\n  addToFavorites(item) {\n    if(!window.localStorage.favorites) {\n      const favorites = {};\n      favorites[item.id] = item;\n      window.localStorage.setItem(\"favorites\", JSON.stringify(favorites));\n      this.setState({favorites: favorites});\n      return;\n    } else {\n      const favorites = JSON.parse(window.localStorage.favorites);\n      if(!favorites[item.id]) {\n        favorites[item.id] = item;\n        window.localStorage.setItem(\"favorites\", JSON.stringify(favorites));\n        this.setState({favorites: favorites});\n      } else return;\n    }\n  }\n\n  removeFromFavorites(item) {\n    const favorites = JSON.parse(window.localStorage.favorites);\n    delete favorites[item.id];\n    window.localStorage.setItem(\"favorites\", JSON.stringify(favorites));\n    this.setState({favorites: favorites});\n  }\n\n  isFavorited(id) {\n    if(this.state.favorites) {\n      if(this.state.favorites[id]) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  checkFavorites() {\n    if(this.state.favorites === null) return false;\n    if(Object.keys(this.state.favorites).length >0) return true;\n    return false;\n  }\n\n  render() {\n    let results = [];\n    if(this.state.results) {\n      this.state.results.forEach((category) => {\n        results.push(<Category \n          className=\"category\" \n          key={`category-${category[0]}`} \n          categoryName={category[0]} \n          categoryList={category[1]} \n          addToFavorites={this.addToFavorites} \n          removeFromFavorites={this.removeFromFavorites} \n          isFavorited={this.isFavorited}>\n          </Category>);\n      });\n    }\n\n    return(\n      <div className=\"main\">\n        <h1 onClick={() => window.location.reload()}><i className=\"fa fa-apple\"></i> iTunes Light</h1>\n        <Search \n          handleFormSearch={this.handleFormSearch} \n          handleInput={this.handleInput}>\n        </Search>\n        {this.checkFavorites() && <Favorites \n          key=\"favorites\" \n          className=\"category\" \n          id=\"favorites\" \n          favoritesList={this.state.favorites}\n          removeFromFavorites={this.removeFromFavorites}>\n        </Favorites> }\n        {results}\n      </div>\n    );\n  }\n}\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}